# @author imbigjetplane üòò
# @2023 copyright üò± üêâ
# Sever nhanh
import requests
import json


def getdata(license_key):
    payload = {
        "data": {
            "BienKS": f"{license_key}",
            "Xe": "1"
        }
    }

    data = json.dumps(payload)

    header = {
        'Content-Type': 'application/json'
    }
    # $$$$$$$$$$$$$$$$$$$
  

    '''
    result_data = {'result': {'isSuccess': True, 'violations': [
        {'licenseNumber': '98E1-866.01',
         'specs': 'N·ªÅn m·∫ßu tr·∫Øng, ch·ªØ v√† s·ªë m√†u ƒëen',
         'vehicleType': '√î t√¥',
         'violationTime': '10:07, 13/08/2023',
         'violationAddress': 'Km 39+900, Qu·ªëc l·ªô 31, Th·ªã tr·∫•n Ch≈©, Huy·ªán L·ª•c Ng·∫°n, T·ªânh B·∫Øc Giang',
         'behavior': 'Kh√¥ng ch·∫•p h√†nh hi·ªáu l·ªánh c·ªßa ƒë√®n t√≠n hi·ªáu giao th√¥ng',
         'status': 'Ch∆∞a x·ª≠ ph·∫°t',
         'provider': 'ƒê·ªôi C·∫£nh s√°t giao th√¥ng, Tr·∫≠t t·ª±, C√¥ng an huy·ªán L·ª•c Ng·∫°n - C√¥ng an huy·ªán L·ª•c Ng·∫°n - T·ªânh B·∫Øc Giang',
         'contactPhone': '',
         'contactAddress': '1. ƒê·ªôi C·∫£nh s√°t giao th√¥ng, Tr·∫≠t t·ª±, C√¥ng an huy·ªán L·ª•c Ng·∫°n - C√¥ng an huy·ªán L·ª•c Ng·∫°n - T·ªânh B·∫Øc Giang\nƒê·ªãa ch·ªâ: huy·ªán L·ª•c Ng·∫°n\n'},
        {'licenseNumber': '98E1-866.01',
         'specs': 'N·ªÅn m·∫ßu tr·∫Øng, ch·ªØ v√† s·ªë m√†u ƒëen',
         'vehicleType': '√î t√¥',
         'violationTime': '17:44, 10/05/2023', 'violationAddress': 'Km 39+ 900, Qu·ªëc l·ªô 31',
         'behavior': 'Ch·ªü ng∆∞·ªùi ng·ªìi tr√™n xe kh√¥ng ƒë·ªôi ‚Äúm≈© b·∫£o hi·ªÉm cho ng∆∞·ªùi ƒëi m√¥ t√¥, xe m√°y‚Äù',
         'status': 'Ch∆∞a x·ª≠ ph·∫°t',
         'provider': 'ƒê·ªôi C·∫£nh s√°t giao th√¥ng, Tr·∫≠t t·ª±, C√¥ng an huy·ªán L·ª•c Ng·∫°n - C√¥ng an huy·ªán L·ª•c Ng·∫°n - T·ªânh B·∫Øc Giang',
         'contactPhone': '',
         'contactAddress': '1. ƒê·ªôi C·∫£nh s√°t giao th√¥ng, Tr·∫≠t t·ª±, C√¥ng an huy·ªán L·ª•c Ng·∫°n - C√¥ng an huy·ªán L·ª•c Ng·∫°n - T·ªânh B·∫Øc Giang\nƒê·ªãa ch·ªâ: huy·ªán L·ª•c Ng·∫°n\n'}]}}
    '''

    result_data = p.json()
    is_success = result_data['result']['isSuccess']
    if is_success == True:
        num_foul = len(result_data['result']['violations'])
        if num_foul > 0:
            data = {
                'licenseNumber': [],
                'S√¥ÃÅ l√¥ÃÉi vi phaÃ£m': [f"{num_foul}"],
                'specs': [],
                'vehicleType': [],
                'behavior': [],
                'violationAddress': [],
                'violationTime': [],
                'status': [],
                'provider': [],
                'contactAddress': []
            }
            for data_violated in result_data['result']['violations']:
                for key,value in data_violated.items():
                    if key != 'contactPhone' and data[f'{key}'].count(value) == 0 and key != "Tr·∫°ng th√°i":
                        data[f'{key}'].append(value)
                    if key == "Tr·∫°ng th√°i":
                        data[f'{key}'].append(value)
            return data

        else:
            return "NOT VIOLATED"

    else:
        return "ERROR"


def check_status():
    try:
        payload = {
            "data": {
                "BienKS": "98E186601",
                "Xe": "1"
            }
        }

        data = json.dumps(payload)

        header = {
            'Content-Type': 'application/json'
        }
        # $$$$$$$$$$$$$$$$$$$
        result_data = p.json()
        is_success = result_data['result']['isSuccess']
        if is_success == True:
            return "Active"
        else:
            return "Error"
    except:
        return "Error"
